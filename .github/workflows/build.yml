name: Track Dev Functions

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  track:
    name: Extract and Track Functions
    runs-on: ubuntu-latest

    steps:
      - name: Checkout dev branch
        uses: actions/checkout@v4
        with:
            ref: dev
            fetch-depth: 2 

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build the project
        run: ./gradlew build

      - name: Generate Dokka docs
        run: ./gradlew dokkaHtml

      - name: Install Python dependencies
        run: pip3 install beautifulsoup4

      - name: Extract function-level changes
        id: extract_functions
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          COMMIT_DATE=$(git show -s --format=%ci $COMMIT_SHA)
          OUTPUT="function_change_log.md"

          echo "| Function Name | Status   | Commit SHA | Date |" > $OUTPUT
          echo "|---------------|----------|------------|------|" >> $OUTPUT

          # Get diff between last two commits (fetch-depth: 2 must be set above)
          git log --oneline -2
          git diff HEAD~1 HEAD -- '*.kt' '*.java' > changes.diff || true

          echo "==== Git diff ===="
          cat changes.diff || echo "No diff"

          # Extract + and - lines that may define functions
          grep -E '^[+-].*(fun |void |public |private |protected).*?\(.*?\)' changes.diff > raw_funcs.diff || true

          # Parse function names and categorize them
          awk -v sha="$COMMIT_SHA" -v date="$COMMIT_DATE" '
            function extract_name(line) {
              match(line, /(fun|void)[ \t]+([a-zA-Z0-9_]+)/, arr)
              return arr[2]
            }
            /^-/ { old_funcs[extract_name($0)] = 1 }
            /^+/ { new_funcs[extract_name($0)] = 1 }
            END {
              for (f in new_funcs) {
                if (f in old_funcs) {
                  status = "updated"
                } else {
                  status = "new"
                }
                printf("| %s | %s | %s | %s |\n", f, status, sha, date)
              }
              for (f in old_funcs) {
                if (!(f in new_funcs)) {
                  printf("| %s | deleted | %s | %s |\n", f, sha, date)
                }
              }
            }
          ' raw_funcs.diff >> $OUTPUT

           echo "==== Raw functions ===="
           cat raw_funcs.diff || echo "No functions found"

      - name: Upload function log artifact
        uses: actions/upload-artifact@v4
        with:
          name: function-change-log-${{ github.sha }}
          path: function_change_log.md
